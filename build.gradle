plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
}

group 'com.fahze'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
    javafxVersion = '21.0.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 21
}

application {
    mainModule = 'com.fahze.demojavafx'
    mainClass = 'com.fahze.demojavafx.HelloApplication'
}

javafx {
    version = "${javafxVersion}"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing']
}

dependencies {
    // JavaFX
    implementation("org.openjfx:javafx-controls:${javafxVersion}")
    implementation("org.openjfx:javafx-fxml:${javafxVersion}")
    implementation("org.openjfx:javafx-web:${javafxVersion}")
    implementation("org.openjfx:javafx-swing:${javafxVersion}")

    // Third-party libraries
    implementation('org.controlsfx:controlsfx:11.2.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('net.synedra:validatorfx:0.5.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('eu.hansolo:tilesfx:21.0.3') {
        exclude(group: 'org.openjfx')
    }

    // Database
    implementation('org.xerial:sqlite-jdbc:3.44.1.0')

    // Logging
    implementation("org.apache.logging.log4j:log4j-core:2.22.1")
    implementation("org.apache.logging.log4j:log4j-api:2.22.1")
    implementation("org.slf4j:slf4j-log4j12:2.0.11")

    // Testing
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.testfx:testfx-core:4.0.17")
    testImplementation("org.testfx:testfx-junit5:4.0.17")
    testImplementation("org.hamcrest:hamcrest:2.2")
}

test {
    useJUnitPlatform()
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'FinanceTracker'
    }
    jpackage {
        // Configuration spécifique à chaque plateforme
        imageOptions = ['--icon', 'src/main/resources/icon.ico']
        skipInstaller = false

        // Options Windows
        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser']
            installerType = 'msi'
        }

        // Options MacOS
        if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
            installerOptions += ['--mac-package-name', 'FinanceTracker']
            installerType = 'dmg'
        }

        // Options Linux
        if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
            installerType = 'deb'
        }
    }
}

tasks.jlink {
    doLast {
        copy {
            from('database.db')
            into("${buildDir}/image/bin")
        }
    }
}

// Configuration pour Gradle
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-parameters'
    }
}